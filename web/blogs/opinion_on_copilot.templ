package blogs

import (
	"github.com/robgtest/blog/web/components"
	"github.com/robgtest/blog/web/pages"
)

templ IsCopilotADud(theme string) {
	@pages.BlogPage("Coplilot, a bad implementation", theme) {
		<div>
			<figure>
				<h1>Coplilot, a bad implementation?</h1>
				@components.BlogTimeCaption("7")
			</figure>
			<p>AI is causing a big transformation in the software development field in practically all areas, there's no doubt about that, with the success of LLM these tools are no doubt great for productivity.</p>
			<p>My biggest pet peeve though is Copilot. No doubt there's been tremendous effort to implement it and it's presence an important step for AI in Software development but in my opinion it's caused everyone to try and jump on a bandwagon of what I personally feel as a tool feels a bit lacking. For me far too obtrusive which reminds me of someone:</p>
			<figure>
				<img class="shadow-xl rounded-lg" src="../../images/isitclippy.jpeg"/>
				<figcaption>A clippy for the modern AI age</figcaption>
			</figure>
			<h2>Why I'm not a fan</h2>
			<p>I like to create connections to real life what software represents after all and I suppose this is the very opinionated part of this article AI can be interpreted in several ways but here's my view</p>
			<p>
				AI as it currently stands, reminds me of an overly ambitious student. When I give it some instruction whether that be in the form of a direct ask it can VERY QUICKLY trawl a rather large library it'll go find the book it needs to formulate an answer from a few books.
				and with a somewhat optimistic outlook will try and present an answer to you. The main issue being is the consensus on it's correctness belongs to the user of the AI not the AI itself. Which is currently the biggest hurdle AI faces before it can be trusted by the majority of people.
			</p>
			<p>So there that's a very quick opinion from someone who's only right to an opinion is democracy (Something that a majority of CEO's could do with remembering). You'd need a very good data scientist for further understanding.</p>
			<p>Given that let's dig into the problems copilot faces</p>
			<h2>Copilot is Annoying</h2>
			<p>
				Okay so my biggest pet peeve with copilot is that I can't exactly communicate when I don't WANT it to try and guess, the library it's using may not have a certain book. E.g. I've been using go-templ for this site AI doesnt know about it yet or has limited knowledge
				So it's making some very annoying guesses often times based on my own code as to what the solution is, which personally casues my blood to boil, this leads to point two.
			</p>
			<figure>
				<img class="shadow-xl rounded-lg" src="../../images/annoying.webp"/>
				<figcaption>Have you heard of our lord and saviour, clippy?</figcaption>
			</figure>
			<h2>New Frameworks suffer</h2>
			<p>
				IT keeps changing, tools are absolutely no means perfect yet copilot rewards you for sticking to the grain which can be good, well hell I wish that would be the case in some instances but for every bad serverless slop tool, there's usually a good tool, which Copilot won't know which may disuade people.
				and on the topic of sticking to the grain:
			</p>
			<h2>Copilot eats suggestions</h2>
			<p>Copilot eats several slots of what my IDE wants me to do, the LSP is a VERY important tool. For those not in the know thats your Language server provider, which effectively tells you the methods available on objects, what you can do with that array etc.</p>
			<p>For every suggestion copilot provides, you loose two valid LSP points, you miss a potential option on a method you dont see. Overall not great, what did Copilot do to justify that.</p>
			<h2>The slow decay of my brain</h2>
			<p>
				I've recently been reading about dementia recently and in that book it suggests to help prevent dementia one of the recommendations is to not use Satnav, why? 
				<p>As it causes the hippocampus to diminish because the part that remembers which turn off to take or which direction your going comes from that part of the brain</p>
				<p>Is an important muscle to train. Now I'm not going to be silly and make a prediction that the advent of AI will cause mass dementia but it does make me wonder of the long term effects that AI will have on our brains</p>
				<p>Copilot is the worst case implemention for this without even letting me trying to figure out the problem on my own, it's already guessed it for me. Like don't get me wrong I can't 'know' everything but I do remember some things. For some reason being told how to write log lines everytime is ultiamtely not helpful</p>
			</p>
			<h1>An Alternative</h1>
			<p>I use Neovim btw.</p>
			<p>Unfortunately I don't know of really a good implementation of this yet in Jetbrains or VSCode. Please let me know if you have a good one!</p>
			<figure>
				<img class="shadow-xl rounded-lg" src="../../images/vim-user.png"/>
				<figcaption class="mx-auto text-center">Average neovim user</figcaption>
			</figure>
			<h2>GP.nvim</h2>
			<p>I really like <a href="https://github.com/Robitx/gp.nvim">https://github.com/Robitx/gp.nvim</a></p>
			<p>It changes the focus of AI being in my face and puts it as a unobtrusive tool. As opposed to the copilot approach to code being thrown at me at every turn, It's when I need it.</p>
			<p>Now it's not much different than actually just using the GPT web client but it does have some pretty cool features I think are great, and certainly there's room for more polish.</p>
			<h3>The Terminal</h3>
			<p>
				The GPT client, a nice <kbd class="kbd">Ctrl</kbd><kbd class="kbd">g</kbd> + <kbd class="kbd">Ctrl</kbd><kbd class="kbd">v</kbd> opens up a nice terminal window akin to ChatGPT main website. Important for me as it has full vim support.
				Not much to say about this one, it saves the chats into my IDE and it's probably cheaper than the premium GPT's since it uses the API.
			</p>
			<h3>Rewrites, Prepends and Appends</h3>
			<p>
				This is the juice, GPT rewrites are my favorite part of using AI now, and it honestly feels like cheating.
				Creating a visual selection and makes me feel great without the usual obtrusiveness of AI for example <kbd class="kbd">Ctrl</kbd><kbd class="kbd">g</kbd><kbd class="kbd">r</kbd>
			</p>
			opens a one line window, type in any instruction, feeling, rewording and AI will do the instruction on that set of text. Words can't do it justice
			<p>And it feels <strong>good.</strong></p>
			<ol class="steps-list">
				<li class="step-item">
					<p class="step-description">Have some code</p>
					<img class="step-image shadow-xl rounded-lg" src="../../images/pre-whisper.png" alt="Initial code"/>
				</li>
				<li class="step-item">
					<p class="step-description">Hit the rewrite button</p>
					<img class="step-image shadow-xl rounded-lg" src="../../images/seductive.webp" alt="Rewrite prompt"/>
					<figcaption class="step-caption">My prompt "Ooh baby I love it when you write this as a python object."</figcaption>
				</li>
				<li class="step-item">
					<p class="step-description">Profit</p>
					<img class="step-image shadow-xl rounded-lg" src="../../images/post-whisper.png" alt="Final output"/>
				</li>
			</ol>
			<h3>Whisper</h3>
			<p><strong>Warning</strong> - This is now getting into gimmicky territory, you can skip if your done with the actually useful stuff but it's fun to talk about this.</p>
			<p>Instead of writing your instruction you say it, and yes. Saying the word 'Enhance' over and over has a good change of making your code better.</p>
			<p>In conclusion - I really look forward to when we grow out of the awkward phase of AI and hope to optimize the tools we have. I also really hope that those against AI who thinks its just bad realize that the LLM is not bad just how we've presented it as a development tool!</p>
		</div>
	}
}
